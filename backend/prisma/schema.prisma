// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ================================
// MODÈLES UTILISATEURS
// ================================

model Patient {
  id                String   @id @default(cuid())
  patientId         String   @unique // BJ2025001 format
  nom               String
  prenom            String
  dateNaissance     DateTime
  telephone         String   @unique
  email             String?  @unique
  adresse           String?
  ville             String?
  groupeSanguin     String?
  allergies         String[] // Array de strings
  maladiesChroniques String[] // Array de strings
  contactUrgence    String?
  
  // Authentification
  passwordHash      String
  lastLogin         DateTime?

  // Données blockchain
  hederaAccountId   String?  @unique
  publicKey         String?

  // Métadonnées
  hopitalPrincipal  String   // Référence à l'hôpital
  qrCodeHash        String?  @unique
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  consultations     Consultation[]
  permissions       PermissionMedecin[]
  notifications     Notification[]
  
  @@map("patients")
}

model Medecin {
  id              String   @id @default(cuid())
  medecinId       String   @unique // Format: MED-CHU-001
  nom             String
  prenom          String
  email           String   @unique
  telephone       String
  specialite      String
  numeroOrdre     String   @unique // Numéro ordre des médecins
  
  // Affiliation
  hopitalId       String
  hopital         Hopital  @relation(fields: [hopitalId], references: [id])
  service         String   // Cardiologie, Pédiatrie, etc.
  
  // Authentification
  passwordHash    String
  isActive        Boolean  @default(true)
  lastLogin       DateTime?
  
  // Données blockchain
  hederaAccountId String?  @unique
  publicKey       String?
  
  // Métadonnées
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  consultations   Consultation[]
  permissions     PermissionMedecin[]
  
  @@map("medecins")
}

model Hopital {
  id          String   @id @default(cuid())
  code        String   @unique // chu-mel, cnhu-hkm
  nom         String   // CHU-MEL, CNHU-HKM
  ville       String
  adresse     String
  telephone   String
  email       String
  directeur   String?
  
  // Configuration
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  medecins    Medecin[]
  consultations Consultation[]
  
  @@map("hopitaux")
}

// ================================
// MODÈLES MÉDICAUX
// ================================

model Consultation {
  id              String   @id @default(cuid())
  consultationId  String   @unique // Format: CONS-2025-001
  
  // Participants
  patientId       String
  patient         Patient  @relation(fields: [patientId], references: [id])
  medecinId       String
  medecin         Medecin  @relation(fields: [medecinId], references: [id])
  hopitalId       String
  hopital         Hopital  @relation(fields: [hopitalId], references: [id])
  
  // Détails consultation
  dateConsultation DateTime
  type            String   // consultation_generale, urgence, suivi, etc.
  motif           String
  diagnostic      String?
  prescription    String?
  examensPrescrits String[] // Array de strings
  
  // Données vitales
  poids           Float?
  taille          Float?
  tensionArterielle String? // "120/80"
  temperature     Float?
  pouls           Int?
  
  // Statut
  statut          ConsultationStatut @default(PROGRAMMEE)
  notes           String?
  
  // Blockchain
  hederaTxId      String?  @unique // Transaction ID Hedera
  hcsMessageId    String?  @unique // HCS Message ID
  
  // Métadonnées
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("consultations")
}

model PermissionMedecin {
  id              String   @id @default(cuid())
  
  // Participants
  patientId       String
  patient         Patient  @relation(fields: [patientId], references: [id])
  medecinId       String
  medecin         Medecin  @relation(fields: [medecinId], references: [id])
  
  // Permission
  statut          PermissionStatut @default(EN_ATTENTE)
  dateAutorisation DateTime?
  dateExpiration  DateTime?
  typeAcces       TypeAcces @default(LECTURE)
  
  // Blockchain
  hederaTokenId   String?  @unique // HTS Token ID
  
  // Métadonnées
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@unique([patientId, medecinId])
  @@map("permissions_medecins")
}

// ================================
// MODÈLES SYSTÈME
// ================================

model Notification {
  id          String   @id @default(cuid())
  
  // Destinataire
  patientId   String?
  patient     Patient? @relation(fields: [patientId], references: [id])
  
  // Contenu
  type        TypeNotification
  titre       String
  message     String
  isRead      Boolean  @default(false)
  
  // Métadonnées
  createdAt   DateTime @default(now())
  
  @@map("notifications")
}

model AuditLog {
  id          String   @id @default(cuid())
  
  // Action
  action      String   // CREATE_PATIENT, UPDATE_CONSULTATION, etc.
  entityType  String   // Patient, Consultation, etc.
  entityId    String
  
  // Utilisateur
  userId      String
  userType    String   // patient, medecin, admin
  
  // Détails
  oldValues   Json?
  newValues   Json?
  ipAddress   String?
  userAgent   String?
  
  // Blockchain
  hederaTxId  String?
  
  // Métadonnées
  createdAt   DateTime @default(now())
  
  @@map("audit_logs")
}

model Session {
  id          String   @id @default(cuid())
  sessionId   String   @unique

  // Utilisateur
  userId      String
  userType    String   // patient, medecin

  // Session data
  data        Json
  expiresAt   DateTime

  // Métadonnées
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("sessions")
}

model Statistique {
  id              String   @id @default(cuid())

  // Période
  periode         String   // 'daily', 'weekly', 'monthly', 'yearly'
  date            DateTime // Date de la statistique

  // Métriques
  patientsActifs  Int      @default(0)
  consultationsTotal Int   @default(0)
  medecinsActifs  Int      @default(0)
  economiesFCFA   Float    @default(0)
  tempsEconomise  Int      @default(0) // en minutes

  // Adoption système
  adoptionSysteme Float    @default(0) // pourcentage
  medecinsConnectes Float  @default(0) // pourcentage
  patientsInscrits Float   @default(0) // pourcentage
  satisfaction    Float    @default(0) // pourcentage

  // Métadonnées
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([periode, date])
  @@map("statistiques")
}

model ActiviteRecente {
  id          String   @id @default(cuid())

  // Type d'activité
  type        String   // 'nouveau_patient', 'medecin_connecte', 'maintenance', etc.
  titre       String
  description String?

  // Données associées
  count       Int?     // nombre d'éléments concernés
  userId      String?  // utilisateur concerné

  // Statut
  statut      String   @default("actif")

  // Métadonnées
  createdAt   DateTime @default(now())

  @@map("activites_recentes")
}

// ================================
// ENUMS
// ================================

enum ConsultationStatut {
  PROGRAMMEE
  EN_COURS
  TERMINEE
  ANNULEE
  REPORTEE
}

enum PermissionStatut {
  EN_ATTENTE
  ACTIVE
  SUSPENDUE
  REVOQUEE
  EXPIREE
}

enum TypeAcces {
  LECTURE
  ECRITURE
  COMPLET
}

enum TypeNotification {
  CONSULTATION_PROGRAMMEE
  CONSULTATION_ANNULEE
  PERMISSION_DEMANDEE
  PERMISSION_ACCORDEE
  PERMISSION_REVOQUEE
  RAPPEL_RDV
  RESULTAT_EXAMEN
}
